#!/bin/sh
#
# summary: a simple posix script for opening bookmarks
# repository: https://github.com/hollowillow/scripts
#
# usage: bm-open [-hqrs] [-f arg]
# options:
#
#       -f      specify input/output file
#       -h      display this help message
#       -q      supress all output
#       -r      reverse list order
#       -s      sort alphabetically based on name field
#
# dependencies: fzf, wl-clipboard (wayland), xclip (x11), libnotify (optional)

# exit 0 - successful execution
# exit 1 - no selection
# exit 2 - error

# RECOMMENDED: uncomment to set script specific defaults, or set globally
# BROWSER="firefox"
# BOOKMARK_FILE="$HOME/bookmarks.md"
# FZF_DEFAULT_HEADER='use this to set a global header!'

### define functions ###

sendFeedback() {
        if [ -z "$QUIET" ]; then
                printf '%s\n' "$1"; notify-send "$1"
        fi
}

### parse options ###

while getopts ":f:hqrs" OPT >/dev/null >&2
do
        case "$OPT" in
                f) if [ -f "$OPTARG" ]; then BOOKMARK_FILE="$OPTARG"; else sendFeedback "Error: \"$OPTARG\" is not a file" >&2; exit 2; fi;;
                h) sed "1,2d;s/^# //;s/^#$/ /;/^$/ q" "$0"; exit 0;;
                q) QUIET=true;;
                r) REVERSE=true;;
                s) SORT=true;;
                :) sendFeedback "Error: Option -""${OPTARG}"" requires an argument"; exit 2;;
                \?) sendFeedback "Error: Option -""${OPTARG}"" is not an option"; exit 2;;
        esac
done

### check dependencies ###

if [ "$(printenv XDG_SESSION_TYPE)" = wayland ]; then
        set -- wl-copy
elif [ "$(printenv XDG_SESSION_TYPE)" = x11 ]; then
        set -- xclip
fi

for DEPENDENCY in fzf "$@"
do
        if command -v "$DEPENDENCY" >/dev/null 2>&1; then true; else
                sendFeedback "Error: dependency not found: $DEPENDENCY" >&2; exit 2
        fi
done

if [ -z "$BOOKMARK_FILE" ]; then 
        sendFeedback "Error: No file provided" >&2; exit 2
fi

### execute ###

if [ "$(printenv XDG_SESSION_TYPE)" = wayland ]; then
        COPY='enter:become:wl-copy {+1}'
elif [ "$(printenv XDG_SESSION_TYPE)" = x11 ]; then
        COPY='enter:become:xclip -i -selection clipboard {+1}'
fi

if [ "$SORT" = true ] && [ "$REVERSE" = true ]; then
        sed "/^#/ d;/^$/ d" "$BOOKMARK_FILE" | sort -t'|' -k2 -r
elif [ "$SORT" = true ]; then
        sed "/^#/ d;/^$/ d" "$BOOKMARK_FILE" | sort -t'|' -k2
elif [ "$REVERSE" = true ]; then
        sed "/^#/ d;/^$/ d" "$BOOKMARK_FILE"
else
        sed "/^#/ d;/^$/ d" "$BOOKMARK_FILE" | tac
fi | fzf \
        --prompt 'open: ' \
        --header="$(printf '%s\n' 'enter:copy  ctrl-o:open-in-browser  ctrl-i:open-in-mpv' "$FZF_DEFAULT_HEADER")" \
        --multi \
        --delimiter="|" --with-nth="2,3" --accept-nth="1" \
        --bind="$COPY" \
        --bind='ctrl-o:become:$BROWSER {+1}' \
        --bind='ctrl-i:become:mpv --fullscreen {1}' 
