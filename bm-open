#!/bin/sh
#
# summary: a simple posix script for fuzzy searching bookmarks from a JSON file
# repository: https://github.com/hollowillow/scripts
# dependencies: yq (or jq), sk (or fzf)
#
# usage: bm-open [-h|--help] [arg]
# file specifications:
#
#       default file location is $XDG_STATE_HOME/bookmarks.json ($HOME/.local/state)
#       this can be overriden by globally setting $BOOKMARK_FILE to the desired path.
#       the file provided has to contain an array of objects, with the key "link". 
#       the value of the key "link" is what gets printed by this script by default.
#       the objects may contain any other elements.
#
# example usage: 
#
#       bm-open                         outputs link(s) to the terminal
#       bm-open hello world             uses "hello world" as initial query
#       bm-open | xargs -r firefox      opens link(s) in a new firefox window
#       bm-open | xargs -r wl-paste     copies selected link(s) to clipboard

# exit 0 - successful execution
# exit 1 - error

# create a help message from comment block at head of file
if [ "$1" = "-h" ] || [ "$1" = "--help" ] ; then
        sed "1,2d;s/^# //;s/^#$/ /;/^$/ q" "$0"; exit 0
fi

# declare database file
if [ -z "$BOOKMARK_FILE" ]; then
    BOOKMARK_FILE="${XDG_STATE_HOME:-$HOME/.local/state}/bookmarks.json"
fi
touch "$BOOKMARK_FILE"
TMP_FILE="/tmp/fzbm.tmp"
QUERY="$*"

# prioritise yq if installed
if command -v yq >/dev/null 2>&1; then 
        JQ="yq"
elif command -v jq >/dev/null 2>&1; then
        JQ="jq"
else
        printf '%s\n' "$(basename "$0"): Error: dependency not found: jq or yq" >&2; exit 1
fi

# prioritise sk if installed
if command -v sk >/dev/null 2>&1; then 
        MENU="${MENU:-sk}"
elif command -v fzf >/dev/null 2>&1; then
        MENU="${MENU:-fzf}"
else
        printf '%s\n' "$(basename "$0"): Error: dependency not found: fzf or sk" >&2; exit 1
fi

selectBookmarks() {
        "$JQ" -Cc '.[]' "$1" | 
        "$MENU" \
        --ansi --multi \
        --preview-window="up" --preview="printf '%s\n' {} | $JQ -C ." \
        --query="$QUERY" > "$TMP_FILE"
}

extractLinks() {
        while IFS= read -r LINE; do
                printf '%s\n' "$LINE" | "$JQ" -r '.link'
        done < "$1"
}

main() {
        selectBookmarks "$BOOKMARK_FILE"
        extractLinks "$TMP_FILE"
}

main
