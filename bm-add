#!/bin/sh
#
# summary: a simple posix script for adding bookmarks to a JSON database
# repository: https://github.com/hollowillow/scripts
# dependencies: yq (or jq)
#
# usage: bm-add [-h|--help] arg
# example usage: 
#
#       bm-add https://www.example.com  bookmarks link provided as argument
#       bm-add "$(wl-paste)"            bookmarks link in clipboard
#
# configuration:
#
#       you can easily configure the keys and values you store within the script's
#       main function, using the addKey and addArray helper functions. there
#       are multiple examples already provided in the main function. 
#       for correct behaviour with the default configuration, make sure to globally
#       set $MENU to either fzf or sk.

# exit 0 - successful execution
# exit 1 - error

if [ -z "$BOOKMARK_FILE" ]; then
    BOOKMARK_FILE="${XDG_STATE_HOME:-$HOME/.local/state}/bookmarks.json"
fi
touch "$BOOKMARK_FILE"
TMP_FILE="/tmp/bm.tmp"
OBJ_FILE="/tmp/bm.json"

LINK="$1"
if [ -z "$LINK" ]; then 
        printf '%s\n' "$(basename "$0"): Error: no link provided" >&2; exit 1;
fi

# prioritise yq if installed
if command -v yq >/dev/null 2>&1; then 
        JQ="yq"
elif command -v jq >/dev/null 2>&1; then
        JQ="jq"
else
        printf '%s\n' "$(basename "$0"): Error: dependency not found: jq or yq" >&2; exit 1
fi

checkBookmark() {
        # check if any object with the key already has the same value
        VALUE="$("$JQ" --arg link "$1" 'select(.[].link == $link)' "$BOOKMARK_FILE")"
        echo "$VALUE"
        if [ -n "$VALUE" ]; then
                printf '%s\n' "$1 already bookmarked"; exit 0
        fi
}

initBookmark() {
        # create an object file with the link and title elements
        # "$JQ" -n ". += {\"link\": \"$1\", \"title\": \"$2\", \"tags\": []}" > "$TMP_FILE"
        "$JQ" -n --arg link "$1" '{link: $link}' > "$OBJ_FILE"
}

addKey() {
        # first arg is key, second is value
        "$JQ" --arg key "$1" --arg value "$2" '(.[$key]) = $value' "$OBJ_FILE" > "$TMP_FILE" &&
                mv "$TMP_FILE" "$OBJ_FILE"
}

addArray() {
        # first arg is key, second is values separated by newlines
        VALUES="$(printf "$2" | jq -Rs 'split("\n") | map(select(length > 0))')"
        "$JQ" --arg key "$1" --argjson value "$VALUES" '(.[$key]) = $value' "$OBJ_FILE" > "$TMP_FILE" &&
                mv "$TMP_FILE" "$OBJ_FILE"
}

importBookmark() {
        # merge object file with main file
        yq --slurpfile src "$OBJ_FILE" '. += $src' "$BOOKMARK_FILE" > "$TMP_FILE" &&
                mv "$TMP_FILE" "$BOOKMARK_FILE"
}

main() {
        checkBookmark "$LINK"
        initBookmark "$LINK"

        # CONFIGURATION

        # adds title, automatically curls from link
        addKey 'title' "$("$MENU" --print-query --query "$(curl -s "$LINK" |
                grep -o '<title>.*</title>' | sed 's/<\/\?title>//g')" </dev/null)"

        # gathers all tags already in the file and let's you choose them
        addArray 'tags' "$("$JQ" -r '[.[].tags[]] | unique[]' "$BOOKMARK_FILE" | "$MENU" --multi)"

        # adds a date field with desired formating
        # addKey 'date' "$(date "+%y/%m/%d %H:%M:%S")"

        # adds a randomly generated id
        # addKey 'ID' "$(od -An -N2 /dev/urandom | sed 's/ //')"

        # confirmation
        if (printf '%s\n' "Yes" "No" | "$MENU" --prompt="confirm: " | grep "No"); then exit 0; fi

        importBookmark && printf '%s\n' "$LINK succesfully bookmarked"; exit 0
}

main
